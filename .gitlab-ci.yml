stages:
  - build
  - publish

build-gitlab:
  stage: build
  image: alpinelinux/docker-cli
  script:
    - apk add go-task-task curl
    - task build -- --no-cache
  artifacts:
    paths: [build-args.env]
  tags: [ci-docker-image, x86_64]

upload-gitlab:
  stage: publish
  image: alpinelinux/docker-cli
  rules:
    - if: $CI_COMMIT_REF_NAME == "master"
    - if: $CI_COMMIT_REF_NAME =~ /.*-stable$/
  script:
    - |
      [ -z "$DOCKER_PASSWORD" ] && { echo "Please specify \$DOCKER_PASSWORD"; exit 120; }
      printf "$DOCKER_PASSWORD" | docker login -u $DOCKER_USER --password-stdin
    - |
      . ./build-args.env
      docker push alpinelinux/gitlab:$GITLAB_VERSION
      docker-push-image alpinelinux/gitlab:$GITLAB_VERSION alpinelinux/gitlab:$GITLAB_MAJOR_VERSION
      docker push alpinelinux/gitlab-shell:$GITLAB_SHELL_VERSION
      docker push alpinelinux/gitaly:$GITALY_SERVER_VERSION
  tags: [ci-docker-image, x86_64]

upload-gitlab-next:
  stage: publish
  image: alpinelinux/docker-cli
  rules:
    - if: $CI_COMMIT_REF_NAME == "next"
  script:
    - |
      [ -z "$DOCKER_PASSWORD" ] && { echo "Please specify \$DOCKER_PASSWORD"; exit 120; }
      printf "$DOCKER_PASSWORD" | docker login -u $DOCKER_USER --password-stdin
    - |
      . ./build-args.env
      docker tag alpinelinux/gitlab:$GITLAB_VERSION alpinelinux/gitlab:next
      docker push alpinelinux/gitlab:next
      docker tag alpinelinux/gitlab-shell:$GITLAB_SHELL_VERSION alpinelinux/gitlab-shell:next
      docker push alpinelinux/gitlab-shell:next
      docker tag  alpinelinux/gitaly:$GITALY_SERVER_VERSION alpinelinux/gitaly:next
      docker push alpinelinux/gitaly:next
  tags: [ci-docker-image, x86_64]
